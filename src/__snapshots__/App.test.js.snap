// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GridCard will render correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 MuiCard-root css-bhp9pd-MuiPaper-root-MuiCard-root"
      >
        <div
          class="MuiCardHeader-root css-185gdzj-MuiCardHeader-root"
        >
          <div
            class="MuiCardHeader-avatar css-1ssile9-MuiCardHeader-avatar"
          >
            <div
              class="MuiAvatar-root MuiAvatar-circular css-1wlk0hk-MuiAvatar-root"
            >
              <img
                class="MuiAvatar-img css-1pqm26d-MuiAvatar-img"
                src="kdkd"
              />
            </div>
          </div>
          <div
            class="MuiCardHeader-content css-1qbkelo-MuiCardHeader-content"
          >
            <span
              class="MuiTypography-root MuiTypography-body2 MuiCardHeader-title css-et1ao3-MuiTypography-root"
            >
              bj
            </span>
            <span
              class="MuiTypography-root MuiTypography-body2 MuiCardHeader-subheader css-83ijpv-MuiTypography-root"
            >
              20220231
            </span>
          </div>
          <div
            class="MuiCardHeader-action css-sgoict-MuiCardHeader-action"
          >
            <button
              class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium css-78trlr-MuiButtonBase-root-MuiIconButton-root"
              tabindex="0"
              type="button"
            >
              <svg
                aria-hidden="true"
                class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                data-testid="NorthEastSharpIcon"
                focusable="false"
                viewBox="0 0 24 24"
              >
                <path
                  d="M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5H9z"
                />
              </svg>
              <span
                class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
              />
            </button>
          </div>
        </div>
        <div
          class="MuiCardContent-root css-46bh2p-MuiCardContent-root"
          color="textSecondary"
          variant="body2"
        >
          <span
            class="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
          >
            <div
              class="MuiBox-root css-no710t"
            >
              1)
               
              The first option
            </div>
            <div
              class="MuiBox-root css-no710t"
            >
              2)
               
              The second option
            </div>
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 MuiCard-root css-bhp9pd-MuiPaper-root-MuiCard-root"
    >
      <div
        class="MuiCardHeader-root css-185gdzj-MuiCardHeader-root"
      >
        <div
          class="MuiCardHeader-avatar css-1ssile9-MuiCardHeader-avatar"
        >
          <div
            class="MuiAvatar-root MuiAvatar-circular css-1wlk0hk-MuiAvatar-root"
          >
            <img
              class="MuiAvatar-img css-1pqm26d-MuiAvatar-img"
              src="kdkd"
            />
          </div>
        </div>
        <div
          class="MuiCardHeader-content css-1qbkelo-MuiCardHeader-content"
        >
          <span
            class="MuiTypography-root MuiTypography-body2 MuiCardHeader-title css-et1ao3-MuiTypography-root"
          >
            bj
          </span>
          <span
            class="MuiTypography-root MuiTypography-body2 MuiCardHeader-subheader css-83ijpv-MuiTypography-root"
          >
            20220231
          </span>
        </div>
        <div
          class="MuiCardHeader-action css-sgoict-MuiCardHeader-action"
        >
          <button
            class="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium css-78trlr-MuiButtonBase-root-MuiIconButton-root"
            tabindex="0"
            type="button"
          >
            <svg
              aria-hidden="true"
              class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
              data-testid="NorthEastSharpIcon"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5H9z"
              />
            </svg>
            <span
              class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
            />
          </button>
        </div>
      </div>
      <div
        class="MuiCardContent-root css-46bh2p-MuiCardContent-root"
        color="textSecondary"
        variant="body2"
      >
        <span
          class="MuiTypography-root MuiTypography-body1 css-ahj2mt-MuiTypography-root"
        >
          <div
            class="MuiBox-root css-no710t"
          >
            1)
             
            The first option
          </div>
          <div
            class="MuiBox-root css-no710t"
          >
            2)
             
            The second option
          </div>
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NavBar will render correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="MuiBox-root css-k008qs"
      >
        <span
          class="MuiCircularProgress-root MuiCircularProgress-indeterminate MuiCircularProgress-colorPrimary css-18lrjg1-MuiCircularProgress-root"
          role="progressbar"
          style="width: 40px; height: 40px;"
        >
          <svg
            class="MuiCircularProgress-svg css-1idz92c-MuiCircularProgress-svg"
            viewBox="22 22 44 44"
          >
            <circle
              class="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate css-176wh8e-MuiCircularProgress-circle"
              cx="44"
              cy="44"
              fill="none"
              r="20.2"
              stroke-width="3.6"
            />
          </svg>
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="MuiBox-root css-k008qs"
    >
      <span
        class="MuiCircularProgress-root MuiCircularProgress-indeterminate MuiCircularProgress-colorPrimary css-18lrjg1-MuiCircularProgress-root"
        role="progressbar"
        style="width: 40px; height: 40px;"
      >
        <svg
          class="MuiCircularProgress-svg css-1idz92c-MuiCircularProgress-svg"
          viewBox="22 22 44 44"
        >
          <circle
            class="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate css-176wh8e-MuiCircularProgress-circle"
            cx="44"
            cy="44"
            fill="none"
            r="20.2"
            stroke-width="3.6"
          />
        </svg>
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`NewPoll will render correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          style="display: flex; justify-content: center; flex-direction: column; align-items: center;"
        >
          <div>
            <h1>
              Create New Poll
            </h1>
            <span>
              Would You Rather
            </span>
            <br />
            <div>
              <form>
                <label>
                  Option A
                  <input
                    data-testid="text1"
                    name="text1"
                    style="margin-left: 10px;"
                    type="text"
                    value=""
                  />
                </label>
                <br />
                <label>
                  Option B
                  <input
                    data-testid="text2"
                    name="text2"
                    style="margin-left: 10px;"
                    type="text"
                    value=""
                  />
                </label>
                <br />
                <button
                  class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium css-1rwt2y5-MuiButtonBase-root-MuiButton-root"
                  data-testid="submit-button"
                  id="submitNewPoll"
                  style="height: 10%; width: 10%;"
                  tabindex="0"
                  type="submit"
                >
                  Submit
                  <span
                    class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                  />
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        style="display: flex; justify-content: center; flex-direction: column; align-items: center;"
      >
        <div>
          <h1>
            Create New Poll
          </h1>
          <span>
            Would You Rather
          </span>
          <br />
          <div>
            <form>
              <label>
                Option A
                <input
                  data-testid="text1"
                  name="text1"
                  style="margin-left: 10px;"
                  type="text"
                  value=""
                />
              </label>
              <br />
              <label>
                Option B
                <input
                  data-testid="text2"
                  name="text2"
                  style="margin-left: 10px;"
                  type="text"
                  value=""
                />
              </label>
              <br />
              <button
                class="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium css-1rwt2y5-MuiButtonBase-root-MuiButton-root"
                data-testid="submit-button"
                id="submitNewPoll"
                style="height: 10%; width: 10%;"
                tabindex="0"
                type="submit"
              >
                Submit
                <span
                  class="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                />
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
